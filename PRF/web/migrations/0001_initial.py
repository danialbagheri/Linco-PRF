# Generated by Django 2.2.3 on 2019-11-18 13:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ModelChangeLogsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField(blank=True, db_index=True)),
                ('table_name', models.CharField(blank=True, max_length=132)),
                ('table_row', models.BigIntegerField(blank=True)),
                ('data', models.TextField(blank=True)),
                ('action', models.CharField(blank=True, max_length=16)),
                ('timestamp', models.DateTimeField(blank=True)),
            ],
            options={
                'db_table': 'model_change_logs',
            },
        ),
        migrations.CreateModel(
            name='ProductionList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(blank=True, max_length=200, null=True)),
                ('quantity', models.PositiveIntegerField()),
                ('mfg_date', models.DateField(blank=True, help_text='For coding only', null=True)),
                ('expiry_date', models.DateField(blank=True, help_text='For coding only', null=True)),
                ('notes', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='RequestType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ProductionJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prf_number', models.IntegerField(null=True, unique=True)),
                ('requested_date', models.DateTimeField(auto_now_add=True)),
                ('customer_address_id', models.CharField(blank=True, max_length=80, null=True)),
                ('date_issued', models.DateField(auto_now_add=True)),
                ('required_date', models.DateField()),
                ('expected_completion_date', models.DateField(auto_now_add=True, null=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('pallet_type', models.CharField(blank=True, choices=[('Standard', 'Standard'), ('Europe ', 'Europe'), ('Chap', 'Chap'), ('Heat Treated', 'Heat Treated'), ('Other', 'Other')], max_length=30, null=True)),
                ('expiry_date_format', models.CharField(blank=True, max_length=30, null=True)),
                ('shrink_wrap', models.CharField(blank=True, choices=[('Standard Clear', 'Standard Clear'), ('Black', 'Black'), ('Security Tape', 'Security Tape')], max_length=30, null=True)),
                ('special_instructions', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Open', 'Open'), ('Reviewing', 'Reviewing'), ('On-Hold', 'On-Hold'), ('Awaiting Information', 'Awaiting Information'), ('In progress', 'In progress'), ('Complete', 'Complete')], max_length=30, null=True)),
                ('address_label', models.BooleanField(default=False)),
                ('customer_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer.Customer')),
                ('production_list', models.ManyToManyField(blank=True, to='web.ProductionList')),
                ('request_type', models.ManyToManyField(blank=True, to='web.RequestType')),
                ('requested_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
